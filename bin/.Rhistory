vuongtest
require(pscl)
library(dplyr)
#library(mpath)
require(MASS)
require(nonnest2)
?vuongtest
install.packages("NCmisc")
NCmisc::list.functions.in.file(regressions.R)
NCmisc::list.functions.in.file('regressions.R')
ls
pwd
dir
dir()
setwd("/run/user/1002/gvfs/sftp:host=ant-login.linux.crg.es,user=cserranocolome/nfs/users2/dweghorn/projects/Selection_sites/scripts/nextflow/bin")
NCmisc::list.functions.in.file('regressions.R')
p <- NCmisc::list.functions.in.file('regressions.R')
summary(p)
name = 'test'
best_models_df_01 <- data.frame('cancer_type'=name,
'best_model'='')
View(best_models_df_01)
best_models_df <- data.frame('cancer_type'=name,
'best_model'='')
best_models_df$best_model <- as.character(best_models_df$best_model)
best_models_df_0 <- data.frame('cancer_type'=name,
'best_model'='')
best_models_df_0$best_model <- as.character(best_models_df_0$best_model)
best_models_df_1 <- data.frame('cancer_type'=name,
'best_model'='')
best_models_df_1$best_model <- as.character(best_models_df_1$best_model)
best_models_df_01 <- data.frame('cancer_type'=name,
'best_model'='')
best_models_df_01$best_model <- as.character(best_models_df_01$best_model)
effect_simulated = 'syn/'
dirname <- paste('/nfs/users/dweghorn/projects/Selection_sites/scripts/nextflow/results/', effect_simulated, sep = '')
dirname
bin_tyoe = 'genes'
effect_considered = 'all'
bin_type = 'genes'
dirname
dirname <- paste('/nfs/users/dweghorn/projects/Selection_sites/scripts/nextflow/results/', effect_simulated, effect_considered,'/glm_', bin_type, sep = '')
dirname
dirname <- paste('/nfs/users/dweghorn/projects/Selection_sites/scripts/nextflow/results/' , effect_simulated, effect_considered,'/', name,'/glm_', bin_type, sep = '')
name = 'ACC_3mers'
dirname <- paste('/nfs/users/dweghorn/projects/Selection_sites/scripts/nextflow/results/' , effect_simulated, effect_considered,'/', name,'/glm_', bin_type, sep = '')
dirname
bin_type
grepÃ±
grepl
grepl( bin_type, 'cpgi', fixed = TRUE)
if !grepl( bin_type, 'cpgi', fixed = TRUE){
print('bla')
}
if (!grepl( bin_type, 'cpgi', fixed = TRUE)){
print('bla')
}
bin_type = 'genes_cpgi'
grepl( bin_type, 'cpgi', fixed = TRUE)
grepl( 'cpgi', bin_type, fixed = TRUE)
setwd("/run/user/1000/gvfs/sftp:host=ant-login.linux.crg.es,user=vmiro/users/dweghorn/projects/Selection_sites/scripts/nextflow/bin")
data_cov <- fread(paste('/nfs/users/dweghorn/projects/Selection_sites/data/data_all_covariates_syn_', bin_type, '/data_all_covariates_syn_', bin_type, '_', name, '.bed.gz', sep = ''), sep = '\t', nrows = 10)
require(pscl)
library(data.table)
library(dplyr)
require(MASS)
data_cov <- fread(paste('/nfs/users/dweghorn/projects/Selection_sites/data/data_all_covariates_syn_', bin_type, '/data_all_covariates_syn_', bin_type, '_', name, '.bed.gz', sep = ''), sep = '\t', nrows = 10)
bin_type = 'genes'
name = 'ACC_3mers'
data_cov <- fread(paste('/nfs/users/dweghorn/projects/Selection_sites/data/data_all_covariates_syn_', bin_type, '/data_all_covariates_syn_', bin_type, '_', name, '.bed.gz', sep = ''), sep = '\t', nrows = 10)
paste('/nfs/users/dweghorn/projects/Selection_sites/data/data_all_covariates_syn_', bin_type, '/data_all_covariates_syn_', bin_type, '_', name, '.bed.gz', sep = '')
data_cov <- fread(paste('../../../data/data_all_covariates_syn_', bin_type, '/data_all_covariates_syn_', bin_type, '_', name, '.bed.gz', sep = ''), sep = '\t', nrows = 10)
install.packages('R.utils')
library(R.utils)
data_cov <- fread(paste('../../../data/data_all_covariates_syn_', bin_type, '/data_all_covariates_syn_', bin_type, '_', name, '.bed.gz', sep = ''), sep = '\t', nrows = 10)
View(data_cov)
data <- data_cov
data_cbase <- read.csv(paste('../../../New_CBaSE_covariates/Output/output_data_preparation_', name,suffix_cpgi, '.txt', sep = ''), sep = '\t', header = FALSE, nrow  10)
data_cbase <- read.csv(paste('../../../New_CBaSE_covariates/Output/output_data_preparation_', name,suffix_cpgi, '.txt', sep = ''), sep = '\t', header = FALSE, nrows =  100)
suffix_cpgi = ''
data_cbase <- read.csv(paste('../../../New_CBaSE_covariates/Output/output_data_preparation_', name,suffix_cpgi, '.txt', sep = ''), sep = '\t', header = FALSE, nrows =  100)
data_cbase <- data_cbase[ ,c( 'V1', 'V10')]
colnames(data_cbase) <- c('gene', 'expected_s')
data_combined <- merge(data, data_cbase, by = 'gene')
data_combined <- data_combined[, !names(data_combined) %in% vars_to_remove]
vars_to_remove=c("tri_tx","mui", "CpGI_status" ,"Nucleosomes","CRG36", "CpGme_Blood", "Recombination_bins", "DHS",  "mi", "ls", "lambdas", "l_s", "lambda_s")
data_combined <- data_combined[, !names(data_combined) %in% vars_to_remove]
data_position <- data_combined[,c('gene', 'obs')]
data_combined
data_combined <- merge(data, data_cbase, by = 'gene')
data_combined
data_combined <- data_combined[, !names(data_combined) %in% vars_to_remove]
data_commbined
data_combined
data_combined <- merge(data, data_cbase, by = 'gene')
data_combined2 <- data_combined[ !names(data_combined) %in% vars_to_remove]
data_combined[, !names(data_combined) %in% vars_to_remove]
data_combined2 <- data_combined[,data_combined[, !names(data_combined) %in% vars_to_remove]]
data_combined2[data_combined]
data_combined2[c(data_combined)]
data_combined2[, data_combined]
data_combined <- merge(data, data_cbase, by = 'gene')
data_combined[, !names(data_combined) %in% vars_to_remove]
data_combined2 <- data_combined[, !names(data_combined) %in% vars_to_remove]
data_combined
!names(data_combined) %in% vars_to_remove
names(data_combined)
names(data_combined)[!names(data_combined) %in% vars_to_remove]
data_combined2 <- data_combined[, names(data_combined)[!names(data_combined) %in% vars_to_remove]]
data_combined2
data_combined <- merge(data, data_cbase, by = 'gene')
data_combined
names(data_combined)[!names(data_combined) %in% vars_to_remove]
c(names(data_combined)[!names(data_combined) %in% vars_to_remove])
data_combined[c(names(data_combined)[!names(data_combined) %in% vars_to_remove])]
data_combined[,c(names(data_combined)[!names(data_combined) %in% vars_to_remove])]
data_combined[, c("gene", "CpGI")]
c("gene", "CpGI")
test <- [!names(data_combined) %in% vars_to_remove]
test <- !names(data_combined) %in% vars_to_remove
test <- names(data_combined)<[!names(data_combined) %in% vars_to_remove]
test <- names(data_combined)[!names(data_combined) %in% vars_to_remove]
col <- c("gene", "CpGI")
data_combined[, test]
test
data_combined[, ..test]
selected_cols <- !names(data_combined) %in% vars_to_remove
data_combined <- merge(data, data_cbase, by = 'gene')
data_combined <- data_combined[, ..selectedcols]
data_combined <- data_combined[, ..selected_cols]
data_combined <- na.omit(data_combined)
data_position <- data_combined[,c('gene', 'obs')]
data_combined <- data_combined[, !names(data_combined) %in% pos_vars]
selected_cols <- !names(data_combined) %in% vars_to_remove
data_combined <- data_combined[, ..selected_cols]
data_position <- data_combined[,c('gene', 'exon', 'obs')]
data_position <- data_combined[,c('gene', 'obs')]
data_combined <- data_combined[, !names(data_combined) %in% pos_vars]
pos_vars <- c("chr", "start", "end", "gene", "exon")
data_combined <- data_combined[, !names(data_combined) %in% pos_vars]
selected_cols <- !names(data_combined) %in% pos_vars
data_combined <- data_combined[, ..selected_cols]
data_combined <- merge(data, data_cbase, by = 'gene')
selected_cols <- !names(data_combined) %in% vars_to_remove
data_combined <- na.omit(data_combined)
data_combined <- na.omit(data_combined)
data_position <- data_combined[,c('gene', 'obs')]
selected_cols <- !names(data_combined) %in% pos_vars
data_combined <- data_combined[, ..selected_cols]
require(pscl)
library(data.table)
library(dplyr)
require(MASS)
library(R.utils)
effect_simulated = 'syn'
setwd("/run/user/1000/gvfs/sftp:host=ant-login.linux.crg.es,user=vmiro/users/dweghorn/projects/Selection_sites/scripts/nextflow/bin")
data_cov <- fread(paste('../../../data/data_all_covariates_', effect_simulated, '_', bin_type, '/data_all_covariates_', effect_simulated, '_', bin_type, '_', name, '.bed.gz', sep = ''), sep = '\t', nrows = 20)
data_cbase <- read.csv(paste('../../../New_CBaSE_covariates/output_data_preparation_', name,suffix_cpgi, '.txt', sep = ''), sep = '\t', header = FALSE, nrows = 100)
data_cbase <- read.csv(paste('/../../../New_CBaSE_covariates/output_data_preparation_', name,suffix_cpgi, '.txt', sep = ''), sep = '\t', header = FALSE, nrows = 100)
data_cbase <- read.csv(paste('../../../New_CBaSE_covariates/Output/output_data_preparation_', name,suffix_cpgi, '.txt', sep = ''), sep = '\t', header = FALSE, nrows = 100)
data_cbase <- data_cbase[ ,c( 'V1', 'V10')]
colnames(data_cbase) <- c('gene', 'expected_s')
data_combined <- merge(data, data_cbase, by = 'gene')
selected_cols <- !names(data_combined) %in% vars_to_remove
data_combined <- data_combined[, ..selected_cols]
data_combined <- na.omit(data_combined)
data_position <- data_combined[,c('gene', 'obs')]
selected_cols <- !names(data_combined) %in% pos_vars
data_combined <- data_combined[, ..selected_cols]
bin_type
bin_type = "align_genes_cpgi"
print(name)
print(bin_type)
print(effect_considered)
# First, do everything for _0
data_cov_0 <- fread(paste('../../../data/data_all_covariates_', effect_simulated, '_', bin_type, '/data_all_covariates_', effect_simulated, '_', bin_type, '_', name, '_0.bed.gz', sep = ''), sep = '\t', nrows = 100)
data_cbase <- data_cbase[ ,c( 'V1', 'V10')]
View(data_cbase)
data_combined <- merge(data, data_cbase, by = 'gene')
selected_cols <- !names(data_combined) %in% vars_to_remove
data_combined <- data_combined[, ..selected_cols]
data_combined <- na.omit(data_combined)
data_position <- data_combined[,c('gene', 'obs')]
selected_cols <- !names(data_combined) %in% pos_vars
data_combined <- data_combined[, ..selected_cols]
selected_cols <- !names(data_combined) %in% vars_to_remove
vars_to_remove
data_0 <- data
data_1 <- data
data <- rbind(data_0, data_1)
data_combined <- merge(data, data_cbase, by = 'gene')
selected_cols <- !names(data_combined) %in% vars_to_remove
data_combined <- data_combined[, ..selected_cols]
data_combined <- na.omit(data_combined)
data_position <- data_combined[,c('gene', 'obs')]
selected_cols <- !names(data_combined) %in% pos_vars
data_combined <- data_combined[, ..selected_cols]
data_combined <- merge(data, data_cbase, by = 'gene')
library(data.table)
